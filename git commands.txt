CHECK VERSION
-----------------------------------------------------------------
git --version
-----------------------------------------------------------------


SET CONFIG VALUES
-----------------------------------------------------------------
git config --global user.name "user name"
git config --global user.email "user email"
git config --list
-----------------------------------------------------------------


to find help for a command
-----------------------------------------------------------------
git help config
-----------------------------------------------------------------


git init
git status
git show
git ls-files


stop git tracking our project
-----------------------------------------------------------------
rm -rf .git
-----------------------------------------------------------------


to create new file
----------------------------------------------------------------
touch .gitignore
---------------------------------------------------------------

untracked  and modified files will be in our working directory
staging area is where we organize what we want to commit
stage individual file and commit small chunks
we commit when we have made an important change in our file


Add files to staging area
--------------------------------------------------------------------
git add -A			to add everything to staging area
git add file_name		to add a particular file
git status
-------------------------------------------------------------------
file will go to statging area under the title ......changes to be committed:


changes to be committed:


----------------------------------------------------------------------------



untracked files:
--------------------------------------------------------------------------------
here we have those files that have been staged
------------------------------------------------------------------------------


to check to status of files
---------------------------------------------------------------------------
git status


remove files from staging area
------------------------------------------------------------------------------
git reset 			to remove all files from staging area
git reset file_name		to remove a particular file from staging area
------------------------------------------------------------------------------


our first commit
------------------------------------------------------------------------------
git add -A				add everything to staging area
git commit -m "Initial Commit"		commit to local repository 
git status
git log
------------------------------------------------------------------------------


cloning a remote repository
------------------------------------------------------------------------------
$ git clone <url> <where to clone>
	or
$ git clone ../remote_repo.git .		here . represents current repository


viewing information about the remote repository
------------------------------------------------------------------------------
$ git remote -v			list location of the repository
$ git branch -a			list all the branches of the repository


pushing changes 
------------------------------------------------------------------------------
$ git diff			show the changes that we made in code using + and -
$ git status			message :changes not staged for commit
$ git add -A			message :changes to be committed
$ git commit -m "modified Multiply function"


THEN PUSH
------------------------------------------------------------------------------
$ git pull origin master		
$ git push origin master




common workflow

create a branch for desired feature
------------------------------------------------------------------------------
git branch <branch name>	to create a new branch
git branch			to list branches
git checkout <branch_name>	to start working on a branch
--
------------------------------------------------------------------------
this is the position when we work on the file to be sent to branch
we work here on branch file
--------------------------------------------------------------------------


pushing a file in branch to staging area
------------------------------------------------------------------------------
git add -A

git commit -m "what we did to a file in branch"



after commit push branch to remote
------------------------------------------------------------------------------
git push -u origin <branch name>		to push the branch to remote reposiory (usage of -u)
git branch -a					to list all branches

git pull
git push
--------------------------------------------------------------------------



Merge a branch
-----------------------------------------------------------------------------
git checkout master
git pull origin master
git branch --merged				tell us the branches we have merged so far
git merge <branch name>
git push origin master



Deleting a branch
----------------------------------------------------------------------------
git branch --merged
git branch -d <branch name>			to delete a branch from local repository
git branch -a					to show all branches local or remote
git push origin --delete <branch name>		to delete branch from remote repository


linking local repository to remote repository
----------------------------------------------------------------------------------------
git remote add origin <url of remote repo>
git remote -v					to verify repository is linked or not
----------------------------------------------------------------------------------------


pushing the local repository to remote repository
--------------------------------------------------------------------------------------
git push origin master  			master shows master branch

after above command we will be asked for credentials
